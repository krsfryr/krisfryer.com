@use './mixins' as m;
@use './utilities' as u;
@use './variables' as v;
@use './typography' as t;

abbr.normal {
    text-transform: unset;
}

a {
    text-decoration: none;
    color: var(--anchor);

    &:hover {
        text-decoration: underline;
        text-decoration-style: dotted;
        text-underline-offset: .3rem;
    }
}

@include m.all-headings {
    color: light-dark(var(--black), var(--colors-french-beige-100));
    font-weight: var(--heading--font-weight-strong);
    line-height: var(--global--line-height-heading);
    // letter-spacing: -0.01rem;
    text-transform: t.$headings-text-transform;
    text-wrap-style: balance;
}

h1, .h1 {
    font-size: t.$h1-mobile;
    margin-top: var(--global--spacing-vertical);
    margin-bottom: var(--global--spacing-vertical);
    // letter-spacing: -.03em;

    &:first-of-type, &:first-child {
        margin-top: 0;
    }

    @include m.screen(md) {
        font-size: t.$h1-desktop;
    }
}

h2, .h2 {
    font-size: t.$h2-mobile;
    line-height: var(--heading--line-height-h2);
    margin-top: calc(1* var(--global--spacing-vertical));
    margin-bottom: var(--global--spacing-vertical);
    // letter-spacing: -.01em;

    &:first-of-type, &:first-child {
        margin-top: 0;
    }

    @include m.screen(md) {
        font-size: t.$h2-desktop;
    }
}

h3, .h3 {
    font-size: t.$h3-desktop;
    line-height: var(--heading--line-height-h3);
    margin-top: calc(1* var(--global--spacing-vertical));
    margin-bottom: var(--global--spacing-vertical);
    // letter-spacing: -.01em;

    &:first-of-type, &:first-child {
        margin-top: 0;
    }
}

h4, .h4 {
    font-size: t.$h4-desktop;
    line-height: var(--heading--line-height-h4);
    margin-top: calc(1* var(--global--spacing-vertical));
    margin-bottom: var(--global--spacing-vertical);
    // letter-spacing: -.01em;

    &:first-of-type, &:first-child {
        margin-top: 0;
    }
}

h5, .h5 {
    font-size: t.$h5-desktop;
    line-height: var(--heading--line-height-h5);
    margin-top: calc(1* var(--global--spacing-vertical));
    margin-bottom: var(--global--spacing-vertical);
    // letter-spacing: -.01em;

    &:first-of-type, &:first-child {
        margin-top: 0;
    }
}

h6, .h6 {
    font-size: t.$h6-desktop;
    font-style: italic;
    line-height: var(--heading--line-height-h6);
    margin-top: calc(1* var(--global--spacing-vertical));
    margin-bottom: var(--global--spacing-vertical);
    // letter-spacing: -.01em;

    &:first-of-type, &:first-child {
        margin-top: 0;
    }
}

img ~ h1, img ~ .h1,
img ~ h2, img ~ .h2,
img ~ h3, img ~ .h3,
img ~ h4, img ~ .h4,
img ~ h5, img ~ .h5,
img ~ h6, img ~ .h6,
.takeaway-visual ~ h1, .takeaway-visual ~ .h1,
.takeaway-visual ~ h2, .takeaway-visual ~ .h2,
.takeaway-visual ~ h3, .takeaway-visual ~ .h3,
.takeaway-visual ~ h4, .takeaway-visual ~ .h4,
.takeaway-visual ~ h5, .takeaway-visual ~ .h5,
.takeaway-visual ~ h6, .takeaway-visual ~ .h6
{

    &:first-of-type, &:first-child {
        margin-top: revert;
    }
}

p {
    font-size: t.$body-font-size;
    line-height: t.$line-height-default;
}

.title, .subtitle {
    text-transform: t.$headings-text-transform;
    font-weight: 700;
    line-height: t.$line-height-default;
    width: 100%;
}

.title {
    font-size: t.$title-mobile;
    margin: 1.6rem 0 1rem;

    &:first-of-type {
        margin: 0 0 1rem;
    }

    @include m.screen(md) {
        font-size: t.$title-desktop;
    }
}

.subtitle {
    font-size: t.$subtitle;
    font-weight: var(--font-weight--900);
    margin: 1.6rem 0 1rem;
}

.main-text {
    max-width: 70rem;
    margin-bottom: var(--p-lg);
}

li {
    font-size: t.$body-font-size;
    line-height: t.$line-height-default;
}

hr {
    opacity: 100%;
    color: var(--black);
}

.grid {
    display: grid;
    gap: 7.2rem 4rem;

    &-2-col {
        grid-template-columns: 1fr;

        @include m.screen(md) {
            grid-template-columns: repeat(2, 1fr);
        }
    }

    &-3-col {
        grid-template-columns: 1fr;

        @include m.screen(md) {
            grid-template-columns: repeat(2, 1fr);
        }

        @include m.screen(lg) {
            grid-template-columns: repeat(3, 1fr);
        }
    }
}

.mobile-spacer-lg {
    margin-bottom: var(--p-lg);

    @include m.screen(sm) {
        margin-bottom: 0;
    }
}

.mobile-spacer-xl {
    margin-bottom: var(--p-xl);

    @include m.screen(sm) {
        margin-bottom: 0;
    }
}

.icon {
    fill: currentColor;
}

.padding-global {
    padding: v.$global-padding--desktop;

    @include m.screen(lg) {
        padding: v.$global-padding--m-lg;
    }
}

.br-1 {
    border-radius: 1rem;
}

